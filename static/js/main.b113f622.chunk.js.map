{"version":3,"sources":["PostListView/PostList.module.css","SimpleNavbar/Navbar.module.css","SimpleCarousel/Carousel.module.css","CardImageModal/CardImageModal.module.css","SimpleNavbar/SimpleNavbar.js","SimpleCarousel/SimpleCarousel.js","CardImageModal/CardImageModal.js","PostListView/PostListView.js","serviceWorker.js","index.js"],"names":["module","exports","cardImg","clickable","buttonLink","header","brand","navButton","activeNavButton","slide","mobileSlide","full","SimpleNavbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","toggle","bind","assertThisInitialized","setState","react_default","a","createElement","Navbar","className","cnames","navbar","light","expand","SimpleNavbar_NavContents","toggleFunc","openTab","isOpened","activeTab","viewWidth","Component","NavContents","Fragment","NavbarToggler","onClick","SimpleNavbar_MobileNav","collapseNav","SimpleNavbar_FullNav","MobileNav","NavbarBrand","href","Collapse","SimpleNavbar_NavList","FullNav","NavList","Nav","pills","flex-row","flex-column","SimpleNavbar_NavButtons","NavButtons","tabNames","iOS","android","front-end","back-end","toConsumableArray","Array","map","_","i","_cnames","NavItem","key","keys","NavLink","defineProperty","window","scrollTo","images","require","SimpleCarousel","activeIndex","next","previous","goToIndex","animating","nextIndex","length","newIndex","_this2","projectImgs","console","log","slides","image","CarouselItem","src","carousel","alt","altText","CarouselCaption","captionText","Carousel","pause","ride","interval","CarouselIndicators","items","onClickHandler","CardImgModal","projectName","project","src_SimpleCarousel_SimpleCarousel","Modal","isModalOpen","modalControl","ModalHeader","ModalBody","util","PostListView","width","innerWidth","modal","modalProject","openModal","prevState","tabId","PostListView_ProjectList","CardImageModal","ProjectList","currentTab","iOSProjects","androidProjects","frontEndProjects","backEndProjects","projectType","properProjectType","replace","str","toUpperCase","projectSectionKey","projects","PostListView_ProjectSection","ProjectSection","inspect","projectKeys","name","PostListView_LeftSidedCardPost","PostListView_RightSidedCardPost","LeftSidedCardPost","imageSrc","imageAlt","Card","Row","noGutters","Col","xs","md","postlist","onError","e","target","onerror","CardBody","CardTitle","CardText","Button","RightSidedCardPost","Boolean","location","hostname","match","App","updateWindowDimensions","addEventListener","throttle","removeEventListener","tab","src_SimpleNavbar_SimpleNavbar","TabContent","TabPane","src_PostListView_PostListView","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b113f622.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardImg\":\"PostList_cardImg__3GWq0\",\"clickable\":\"PostList_clickable__DH-vB\",\"buttonLink\":\"PostList_buttonLink__2oHLi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__kP8TZ\",\"brand\":\"Navbar_brand__1TrHH\",\"navButton\":\"Navbar_navButton__3hzEf\",\"activeNavButton\":\"Navbar_activeNavButton__3BSn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide\":\"Carousel_slide__2ZZby\",\"mobileSlide\":\"Carousel_mobileSlide__2skeS\",\"full\":\"Carousel_full__3SxM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardImg\":\"CardImageModal_cardImg__lT1bY\"};","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse\n} from \"reactstrap\";\nimport cnames from \"classnames\";\nimport navbar from \"./Navbar.module.css\";\n\nclass SimpleNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          className={cnames(navbar.header, \"fixed-top\")}\n          light\n          expand=\"md\"\n        >\n          <NavContents\n            toggleFunc={this.toggle}\n            openTab={this.props.openTab}\n            isOpened={this.state.isOpen}\n            activeTab={this.props.activeTab}\n            viewWidth={this.props.viewWidth}\n          />\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst NavContents = props => {\n  return (\n    <>\n      <NavbarToggler onClick={props.toggleFunc} />\n      {props.viewWidth < 768 ? (\n        <MobileNav\n          isOpened={props.isOpened}\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n          collapseNav={props.toggleFunc}\n        />\n      ) : (\n        <FullNav\n          isOpened={props.isOpened}\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n        />\n      )}\n    </>\n  );\n};\n\nconst MobileNav = props => {\n  return (\n    <>\n      <NavbarBrand\n        className={cnames(\n          navbar.header,\n          \"border border-dark rounded thick-border\",\n          \"px-3 py-1\",\n          \"font-weight-bold\"\n        )}\n        href=\"/\"\n      >\n        Nick Caceres\n      </NavbarBrand>\n      <Collapse isOpen={props.isOpened} navbar>\n        <NavList\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n          collapseNav={props.collapseNav}\n        />\n      </Collapse>\n    </>\n  );\n};\n\nconst FullNav = props => {\n  return (\n    <>\n      <Collapse isOpen={props.isOpened} navbar>\n        <NavList\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n        />\n      </Collapse>\n      <NavbarBrand\n        className={cnames(\n          navbar.brand,\n          \"border border-dark rounded thick-full-border\",\n          \"px-3 py-1\",\n          \"font-weight-bold\"\n        )}\n        href=\"/\"\n      >\n        Nick Caceres\n      </NavbarBrand>\n    </>\n  );\n};\n\nconst NavList = props => {\n  return (\n    <Nav\n      pills\n      className={cnames({\n        \"flex-row\": props.viewWidth >= 768,\n        \"flex-column\": props.viewWidth < 768\n      })}\n    >\n      <NavButtons\n        activeTab={props.activeTab}\n        openTab={props.openTab}\n        collapseNav={props.collapseNav}\n        viewWidth={props.viewWidth}\n      />\n    </Nav>\n  );\n};\n\nconst NavButtons = props => {\n  const tabNames = {\n    iOS: \"iOS\",\n    android: \"Android\",\n    \"front-end\": \"Front-End Web\",\n    \"back-end\": \"Back-End Web\"\n  };\n\n  return [...Array(4)].map((_, i) => {\n    return (\n      <NavItem\n        className=\"mx-3 mx-md-1 mt-1 px-0\"\n        key={tabNames[Object.keys(tabNames)[i]]}\n      >\n        <NavLink\n          href=\"#\"\n          className={cnames(\n            \"d-flex justify-content-center no-wrap\",\n            \"mx-1\",\n            \"px-1\",\n            {\n              [navbar.navButton]: props.activeTab !== Object.keys(tabNames)[i],\n              [navbar.activeNavButton]:\n                props.activeTab === Object.keys(tabNames)[i],\n              active: props.activeTab === Object.keys(tabNames)[i]\n            }\n          )}\n          onClick={() => {\n            props.openTab(Object.keys(tabNames)[i]);\n            window.scrollTo(0, 0);\n            if (props.viewWidth < 768) {\n              props.collapseNav();\n            }\n          }}\n        >\n          {tabNames[Object.keys(tabNames)[i]]}\n        </NavLink>\n      </NavItem>\n    );\n  });\n};\n\nexport default SimpleNavbar;\n","import React, { Component } from \"react\";\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselCaption,\n  CarouselIndicators\n} from \"reactstrap\";\nimport carousel from \"./Carousel.module.css\";\nimport cnames from \"classnames\";\nconst util = require(\"util\");\n\n// Reactstrap carousel requires image array\n// 3 props two required\n// Src and alt text\n// Don't forget key with array list of items in react (so img src)\nlet images = [];\n\nclass SimpleCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n  }\n\n  // Required prop and gets the animated started\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? images.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const projectImgs = this.props.images;\n    // console.log(\"Here are the carousel images\");\n    // console.log(util.inspect(projectImgs, false, null, true));\n    console.log(\"Current viewWidth: \" + this.props.viewWidth);\n    const slides = projectImgs.map(image => {\n      return (\n        <CarouselItem key={image.src}>\n          <img\n            className={cnames(\n              \"img-fluid\",\n              this.props.viewWidth >= 768\n                ? carousel.slide\n                : carousel.mobileSlide\n            )}\n            src={image.src}\n            alt={image.altText}\n          />\n          <CarouselCaption captionText=\"\" />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n        pause={false}\n        ride=\"carousel\"\n        interval={false}\n        className={cnames(carousel.full)}\n      >\n        <CarouselIndicators\n          items={projectImgs}\n          activeIndex={activeIndex}\n          onClickHandler={this.goToIndex}\n        />\n        {slides}\n      </Carousel>\n    );\n  }\n}\n\nexport default SimpleCarousel;\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport cnames from \"classnames\";\nimport SimpleCarousel from \"../SimpleCarousel/SimpleCarousel\";\nimport cardImg from \"./CardImageModal.module.css\";\nconst util = require(\"util\");\n\nconst CardImgModal = props => {\n  const project = props.project;\n  let projectName;\n  let projectImgs;\n  let carousel;\n  if (project) {\n    projectName = project[\"name\"];\n    projectImgs = project[\"images\"];\n    if (projectImgs.length > 1) {\n      carousel = (\n        <SimpleCarousel images={projectImgs} viewWidth={props.viewWidth} />\n      );\n    } else if (projectImgs.length === 1) {\n      carousel = (\n        <img\n          src={projectImgs[0][\"src\"]}\n          alt={projectImgs[0][\"alt\"]}\n          className={cnames(\"img-fluid\", cardImg.cardImg)}\n        />\n      );\n    } else {\n      carousel = null;\n    }\n  }\n  return (\n    <>\n      <Modal\n        isOpen={props.isModalOpen}\n        toggle={() => {\n          props.modalControl(null);\n        }}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader\n          toggle={() => {\n            props.modalControl(null);\n          }}\n        >\n          {projectName}\n        </ModalHeader>\n        <ModalBody>{carousel}</ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default CardImgModal;\n","// This is a component to create a series of posts\n// They will start on the left side and alternate (May refactor for right start as option)\nimport React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button\n} from \"reactstrap\";\nimport SimpleCarousel from \"../SimpleCarousel/SimpleCarousel\";\nimport CardImageModal from \"../CardImageModal/CardImageModal\";\nimport cnames from \"classnames\";\nimport postlist from \"./PostList.module.css\";\nimport iOSProjects from \"../TabPanelData/iOSProjects.json\"; // Imports are static so you have to list contents one by one\nimport androidProjects from \"../TabPanelData/Android.json\";\nimport frontEndProjects from \"../TabPanelData/Front-End-Web.json\";\nimport backEndProjects from \"../TabPanelData/Back-End-Web.json\";\nconst util = require(\"util\"); // Helps debug JS objects\n\n// FUTURE INSTALL FOR UNIQUE KEYS - Nano-ID\n\nclass PostListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      modal: false,\n      modalProject: null\n    };\n\n    this.openModal = this.openModal.bind(this);\n  }\n\n  openModal(project) {\n    if (project === null) {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    } else {\n      if (this.props.viewWidth < 768) {\n        // Prevent modal from appearing\n        return;\n      }\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n        modalProject: project\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.props.tabId}</h1>\n        <ProjectList\n          tabId={this.props.tabId}\n          viewWidth={this.props.viewWidth}\n          modalControl={this.openModal}\n        />\n        {this.props.viewWidth >= 768 && (\n          <CardImageModal\n            modalControl={this.openModal}\n            isModalOpen={this.state.modal}\n            project={this.state.modalProject}\n            viewWidth={this.props.viewWidth}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst ProjectList = props => {\n  let currentTab;\n  if (props.tabId === \"iOS\") {\n    currentTab = iOSProjects;\n  } else if (props.tabId === \"Android\") {\n    currentTab = androidProjects;\n  } else if (props.tabId === \"Front-End\") {\n    currentTab = frontEndProjects;\n  } else {\n    currentTab = backEndProjects;\n  }\n\n  // For future reference, can use nanoid, shortid, uuid from npm for keys on lists or id on forms\n  // Otherwise using other props is helpful as a key\n  let projectTypes = Object.keys(currentTab);\n  return projectTypes.map((projectType, i) => {\n    // Fancy way to convert json hyphenated names to pretty names\n    const projectTypeNoHyphen = projectType.replace(/-/g, \" \");\n    const properProjectType = projectTypeNoHyphen.replace(/\\b\\w/g, str =>\n      str.toUpperCase()\n    );\n    console.log(\"This is project type and a key: \" + projectType);\n    const projectSectionKey = props.tabId + \" \" + projectType;\n    const projects = currentTab[projectType];\n    return (\n      <div key={projectSectionKey}>\n        <h1>{properProjectType}</h1>\n        <ProjectSection\n          projects={projects}\n          viewWidth={props.viewWidth}\n          modalControl={props.modalControl}\n        />\n      </div>\n    );\n  });\n};\n\nconst ProjectSection = props => {\n  const projects = props.projects;\n  console.log(\n    \"These projects were passed: \" + util.inspect(projects, false, null, true)\n  );\n  const projectKeys = Object.keys(projects);\n  console.log(\"With these keys: \" + projectKeys);\n  return projects.map((project, i) => {\n    console.log(\"This is the project name: \" + project.name);\n    console.log(\"This is the project info: \" + project);\n    if (i % 2 === 0 || props.viewWidth < 768) {\n      return (\n        <LeftSidedCardPost\n          project={project}\n          modalControl={props.modalControl}\n          viewWidth={props.viewWidth}\n          key={project.name}\n        />\n      );\n    } else {\n      return (\n        <RightSidedCardPost\n          project={project}\n          modalControl={props.modalControl}\n          viewWidth={props.viewWidth}\n          key={project.name}\n        />\n      );\n    }\n  });\n};\n\nconst LeftSidedCardPost = props => {\n  const project = props.project;\n  const imageSrc = project[\"images\"][\"0\"][\"src\"];\n  const imageAlt = project[\"images\"][\"0\"][\"alt\"];\n  return (\n    <>\n      <Card>\n        <Row noGutters>\n          <Col xs=\"12\" md=\"2\" className=\"d-flex justify-content-center\">\n            {props.viewWidth >= 768 || project[\"images\"].length <= 1 ? (\n              <img\n                className={cnames(\"img-fluid\", postlist.cardImg, {\n                  [postlist.clickable]: props.viewWidth >= 992\n                })}\n                src={imageSrc}\n                alt={imageAlt}\n                onClick={() => {\n                  props.modalControl(project);\n                }}\n                onError={e => {\n                  e.target.onerror = null;\n                  e.target.src =\n                    \"https://via.placeholder.com/350.png?text=Project\";\n                }}\n              />\n            ) : (\n              <SimpleCarousel\n                images={project[\"images\"]}\n                viewWidth={props.viewWidth}\n              />\n            )}\n          </Col>\n          <Col xs=\"12\" md=\"10\">\n            <CardBody>\n              <CardTitle>{project[\"name\"]}</CardTitle>\n              <CardText>{project[\"desc\"]}</CardText>\n              <Button\n                className={cnames(postlist.buttonLink, \"font-weight-bold\")}\n                href={project[\"github\"]}\n              >\n                Github Page\n              </Button>\n            </CardBody>\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nconst RightSidedCardPost = props => {\n  const project = props.project;\n  const imageSrc = project[\"images\"][\"0\"][\"src\"];\n  const imageAlt = project[\"images\"][\"0\"][\"alt\"];\n  return (\n    <>\n      <Card>\n        <Row noGutters>\n          <Col xs=\"12\" md=\"10\">\n            <CardBody>\n              <CardTitle>{project[\"name\"]}</CardTitle>\n              <CardText>{project[\"desc\"]}</CardText>\n              <Button\n                className={cnames(postlist.buttonLink, \"font-weight-bold\")}\n                href={project[\"github\"]}\n              >\n                Github Page\n              </Button>\n            </CardBody>\n          </Col>\n          <Col xs=\"12\" md=\"2\">\n            <img\n              className={cnames(\"img-fluid\", postlist.cardImg, {\n                [postlist.clickable]: props.viewWidth >= 768\n              })}\n              src={imageSrc}\n              alt={imageAlt}\n              onClick={() => {\n                props.modalControl(project);\n              }}\n              onError={e => {\n                e.target.onerror = null;\n                e.target.src =\n                  \"https://via.placeholder.com/350.png?text=Project\";\n              }}\n            />\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nexport default PostListView;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SimpleNavBar from \"./SimpleNavbar/SimpleNavbar\";\nimport PostListView from \"./PostListView/PostListView.js\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport throttle from \"lodash.throttle\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.openTab = this.openTab.bind(this);\n    this.state = {\n      activeTab: \"iOS\",\n      width: window.innerWidth\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\n      \"resize\",\n      throttle(this.updateWindowDimensions(), 500)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"resize\",\n      throttle(this.updateWindowDimensions(), 500)\n    );\n  }\n\n  updateWindowDimensions() {\n    return throttle(() => {\n      this.setState({ width: window.innerWidth });\n    });\n  }\n\n  openTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <SimpleNavBar\n          openTab={this.openTab}\n          activeTab={this.state.activeTab}\n          viewWidth={this.state.width}\n        />\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"iOS\">\n            <PostListView tabId=\"iOS\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"android\">\n            <PostListView tabId=\"Android\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"front-end\">\n            <PostListView tabId=\"Front-End\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"back-end\">\n            <PostListView tabId=\"Back-End\" viewWidth={this.state.width} />\n          </TabPane>\n        </TabContent>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}