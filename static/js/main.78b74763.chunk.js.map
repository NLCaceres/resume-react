{"version":3,"sources":["PostListView/PostList.module.css","SimpleNavbar/Navbar.module.css","SimpleCarousel/Carousel.module.css","CardImageModal/CardImageModal.module.css","SimpleNavbar/SimpleNavbar.js","SimpleCarousel/SimpleCarousel.js","CardImageModal/CardImageModal.js","PostListView/PostListView.js","serviceWorker.js","index.js"],"names":["module","exports","SimpleNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","className","cnames","navbar","header","light","expand","toggleFunc","openTab","isOpened","activeTab","viewWidth","Component","NavContents","NavbarToggler","onClick","collapseNav","MobileNav","NavbarBrand","href","Collapse","FullNav","brand","NavList","Nav","pills","NavButtons","tabNames","iOS","android","Array","map","_","i","NavItem","key","Object","keys","NavLink","navButton","activeNavButton","window","scrollTo","images","require","SimpleCarousel","activeIndex","next","previous","goToIndex","animating","nextIndex","length","newIndex","projectImgs","console","log","slides","image","CarouselItem","src","carousel","slide","mobileSlide","alt","altText","CarouselCaption","captionText","Carousel","pause","ride","interval","full","CarouselIndicators","items","onClickHandler","CardImgModal","projectName","project","cardImg","Modal","isModalOpen","modalControl","ModalHeader","ModalBody","util","PostListView","width","innerWidth","modal","modalProject","openModal","prevState","tabId","CardImageModal","ProjectList","currentTab","iOSProjects","androidProjects","frontEndProjects","backEndProjects","projectType","properProjectType","replace","str","toUpperCase","projectSectionKey","projects","ProjectSection","inspect","projectKeys","name","LeftSidedCardPost","imageSrc","imageAlt","Card","Row","noGutters","Col","xs","md","postlist","clickable","onError","e","target","onerror","CardBody","CardTitle","CardText","Button","githubLink","blockButton","RightSidedCardPost","Boolean","location","hostname","match","App","updateWindowDimensions","addEventListener","throttle","removeEventListener","tab","TabContent","TabPane","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,UAAY,4BAA4B,WAAa,6BAA6B,YAAc,gC,mBCAtJD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,UAAY,0BAA0B,gBAAkB,kC,mBCAxID,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,YAAc,8BAA8B,KAAO,yB,mBCArGD,EAAOC,QAAU,CAAC,QAAU,kC,8psCCYtBC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,QAAQ,GAEV,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBALG,E,sEASjBC,KAAKC,SAAS,CACZJ,QAASG,KAAKJ,MAAMC,W,+BAKtB,OACE,oCACE,kBAACK,EAAA,EAAD,CACEC,UAAWC,IAAOC,IAAOC,OAAQ,cACjCC,OAAK,EACLC,OAAO,MAEP,kBAAC,EAAD,CACEC,WAAYT,KAAKF,OACjBY,QAASV,KAAKL,MAAMe,QACpBC,SAAUX,KAAKJ,MAAMC,OACrBe,UAAWZ,KAAKL,MAAMiB,UACtBC,UAAWb,KAAKL,MAAMkB,kB,GA5BPC,aAoCrBC,EAAc,SAAApB,GAClB,OACE,oCACE,kBAACqB,EAAA,EAAD,CAAeC,QAAStB,EAAMc,aAC7Bd,EAAMkB,UAAY,IACjB,kBAAC,EAAD,CACEF,SAAUhB,EAAMgB,SAChBD,QAASf,EAAMe,QACfE,UAAWjB,EAAMiB,UACjBC,UAAWlB,EAAMkB,UACjBK,YAAavB,EAAMc,aAGrB,kBAAC,EAAD,CACEE,SAAUhB,EAAMgB,SAChBD,QAASf,EAAMe,QACfE,UAAWjB,EAAMiB,UACjBC,UAAWlB,EAAMkB,cAOrBM,EAAY,SAAAxB,GAChB,OACE,oCACE,kBAACyB,EAAA,EAAD,CACEjB,UAAWC,IACTC,IAAOC,OACP,0CACA,YACA,oBAEFe,KAAK,KAPP,gBAWA,kBAACC,EAAA,EAAD,CAAUzB,OAAQF,EAAMgB,SAAUN,QAAM,GACtC,kBAAC,EAAD,CACEK,QAASf,EAAMe,QACfE,UAAWjB,EAAMiB,UACjBC,UAAWlB,EAAMkB,UACjBK,YAAavB,EAAMuB,iBAOvBK,EAAU,SAAA5B,GACd,OACE,oCACE,kBAAC2B,EAAA,EAAD,CAAUzB,OAAQF,EAAMgB,SAAUN,QAAM,GACtC,kBAAC,EAAD,CACEK,QAASf,EAAMe,QACfE,UAAWjB,EAAMiB,UACjBC,UAAWlB,EAAMkB,aAGrB,kBAACO,EAAA,EAAD,CACEjB,UAAWC,IACTC,IAAOmB,MACP,+CACA,YACA,oBAEFH,KAAK,KAPP,kBAeAI,EAAU,SAAA9B,GACd,OACE,kBAAC+B,EAAA,EAAD,CACEC,OAAK,EACLxB,UAAWC,IAAO,CAChB,WAAYT,EAAMkB,WAAa,IAC/B,cAAelB,EAAMkB,UAAY,OAGnC,kBAAC,EAAD,CACED,UAAWjB,EAAMiB,UACjBF,QAASf,EAAMe,QACfQ,YAAavB,EAAMuB,YACnBL,UAAWlB,EAAMkB,cAMnBe,EAAa,SAAAjC,GACjB,IAAMkC,EAAW,CACfC,IAAK,MACLC,QAAS,UACT,YAAa,gBACb,WAAY,gBAGd,OAAO,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAGC,GAAO,IAAD,EACjC,OACE,kBAACC,EAAA,EAAD,CACEjC,UAAU,yBACVkC,IAAKR,EAASS,OAAOC,KAAKV,GAAUM,KAEpC,kBAACK,EAAA,EAAD,CACEnB,KAAK,IACLlB,UAAWC,IACT,wCACA,OACA,QAHe,mBAKZC,IAAOoC,UAAY9C,EAAMiB,YAAc0B,OAAOC,KAAKV,GAAUM,IALjD,cAMZ9B,IAAOqC,gBACN/C,EAAMiB,YAAc0B,OAAOC,KAAKV,GAAUM,IAP/B,uBAQLxC,EAAMiB,YAAc0B,OAAOC,KAAKV,GAAUM,IARrC,IAWjBlB,QAAS,WACPtB,EAAMe,QAAQ4B,OAAOC,KAAKV,GAAUM,IACpCQ,OAAOC,SAAS,EAAG,GACfjD,EAAMkB,UAAY,KACpBlB,EAAMuB,gBAITW,EAASS,OAAOC,KAAKV,GAAUM,UAO3BzC,I,yGC1KXmD,GANSC,EAAQ,IAMR,IAkFEC,E,YA/Eb,WAAYpD,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXoD,YAAa,GAEf,EAAKC,KAAO,EAAKA,KAAKlD,KAAV,gBACZ,EAAKmD,SAAW,EAAKA,SAASnD,KAAd,gBAChB,EAAKoD,UAAY,EAAKA,UAAUpD,KAAf,gBAPA,E,oEAYjB,IAAIC,KAAKoD,UAAT,CACA,IAAMC,EACJrD,KAAKJ,MAAMoD,cAAgBH,EAAOS,OAAS,EACvC,EACAtD,KAAKJ,MAAMoD,YAAc,EAC/BhD,KAAKC,SAAS,CAAE+C,YAAaK,O,iCAI7B,IAAIrD,KAAKoD,UAAT,CACA,IAAMC,EACuB,IAA3BrD,KAAKJ,MAAMoD,YACPH,EAAOS,OAAS,EAChBtD,KAAKJ,MAAMoD,YAAc,EAC/BhD,KAAKC,SAAS,CAAE+C,YAAaK,O,gCAGrBE,GACJvD,KAAKoD,WACTpD,KAAKC,SAAS,CAAE+C,YAAaO,M,+BAGrB,IAAD,OACCP,EAAgBhD,KAAKJ,MAArBoD,YACFQ,EAAcxD,KAAKL,MAAMkD,OAG/BY,QAAQC,IAAI,sBAAwB1D,KAAKL,MAAMkB,WAC/C,IAAM8C,EAASH,EAAYvB,KAAI,SAAA2B,GAC7B,OACE,kBAACC,EAAA,EAAD,CAAcxB,IAAKuB,EAAME,KACvB,yBACE3D,UAAWC,IACT,YACA,EAAKT,MAAMkB,WAAa,IACpBkD,IAASC,MACTD,IAASE,aAEfH,IAAKF,EAAME,IACXI,IAAKN,EAAMO,UAEb,kBAACC,EAAA,EAAD,CAAiBC,YAAY,SAKnC,OACE,kBAACC,EAAA,EAAD,CACEtB,YAAaA,EACbC,KAAMjD,KAAKiD,KACXC,SAAUlD,KAAKkD,SACfqB,OAAO,EACPC,KAAK,WACLC,UAAU,EACVtE,UAAWC,IAAO2D,IAASW,OAE3B,kBAACC,EAAA,EAAD,CACEC,MAAOpB,EACPR,YAAaA,EACb6B,eAAgB7E,KAAKmD,YAEtBQ,O,GA1EoB7C,a,yCCoCdgE,GAhDFhC,EAAQ,IAEA,SAAAnD,GACnB,IACIoF,EACAvB,EACAO,EAHEiB,EAAUrF,EAAMqF,QAuBtB,OAnBIA,IACFD,EAAcC,EAAO,KAGnBjB,GAFFP,EAAcwB,EAAO,QACL1B,OAAS,EAErB,kBAAC,EAAD,CAAgBT,OAAQW,EAAa3C,UAAWlB,EAAMkB,YAExB,IAAvB2C,EAAYF,OAEnB,yBACEQ,IAAKN,EAAY,GAAZ,IACLU,IAAKV,EAAY,GAAZ,IACLrD,UAAWC,IAAO,YAAa6E,IAAQA,WAIhC,MAIb,oCACE,kBAACC,EAAA,EAAD,CACErF,OAAQF,EAAMwF,YACdrF,OAAQ,WACNH,EAAMyF,aAAa,OAErBjF,UAAU,yBAEV,kBAACkF,EAAA,EAAD,CACEvF,OAAQ,WACNH,EAAMyF,aAAa,QAGpBL,GAEH,kBAACO,EAAA,EAAD,KAAYvB,O,wDC3BdwB,GAAOzC,EAAQ,IAIf0C,G,YACJ,WAAY7F,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACX6F,MAAO9C,OAAO+C,WACdC,OAAO,EACPC,aAAc,MAGhB,EAAKC,UAAY,EAAKA,UAAU9F,KAAf,gBARA,E,uEAWTiF,GACR,GAAgB,OAAZA,EACFhF,KAAKC,UAAS,SAAA6F,GAAS,MAAK,CAC1BH,OAAQG,EAAUH,cAEf,CACL,GAAI3F,KAAKL,MAAMkB,UAAY,IAEzB,OAEFb,KAAKC,UAAS,SAAA6F,GAAS,MAAK,CAC1BH,OAAQG,EAAUH,MAClBC,aAAcZ,S,+BAMlB,OACE,6BACE,4BAAKhF,KAAKL,MAAMoG,OAChB,kBAAC,GAAD,CACEA,MAAO/F,KAAKL,MAAMoG,MAClBlF,UAAWb,KAAKL,MAAMkB,UACtBuE,aAAcpF,KAAK6F,YAEpB7F,KAAKL,MAAMkB,WAAa,KACvB,kBAACmF,EAAD,CACEZ,aAAcpF,KAAK6F,UACnBV,YAAanF,KAAKJ,MAAM+F,MACxBX,QAAShF,KAAKJ,MAAMgG,aACpB/E,UAAWb,KAAKL,MAAMkB,iB,GA3CPC,aAmDrBmF,GAAc,SAAAtG,GAClB,IAAIuG,EAcJ,OAZEA,EADkB,QAAhBvG,EAAMoG,MACKI,GACY,YAAhBxG,EAAMoG,MACFK,GACY,cAAhBzG,EAAMoG,MACFM,GAEAC,GAKIhE,OAAOC,KAAK2D,GACXjE,KAAI,SAACsE,EAAapE,GAEpC,IACMqE,EADsBD,EAAYE,QAAQ,KAAM,KACRA,QAAQ,SAAS,SAAAC,GAAG,OAChEA,EAAIC,iBAENlD,QAAQC,IAAI,mCAAqC6C,GACjD,IAAMK,EAAoBjH,EAAMoG,MAAQ,IAAMQ,EACxCM,EAAWX,EAAWK,GAC5B,OACE,yBAAKlE,IAAKuE,GACR,4BAAKJ,GACL,kBAAC,GAAD,CACEK,SAAUA,EACVhG,UAAWlB,EAAMkB,UACjBuE,aAAczF,EAAMyF,oBAOxB0B,GAAiB,SAAAnH,GACrB,IAAMkH,EAAWlH,EAAMkH,SACvBpD,QAAQC,IACN,+BAAiC6B,GAAKwB,QAAQF,GAAU,EAAO,MAAM,IAEvE,IAAMG,EAAc1E,OAAOC,KAAKsE,GAEhC,OADApD,QAAQC,IAAI,oBAAsBsD,GAC3BH,EAAS5E,KAAI,SAAC+C,EAAS7C,GAG5B,OAFAsB,QAAQC,IAAI,6BAA+BsB,EAAQiC,MACnDxD,QAAQC,IAAI,6BAA+BsB,GACvC7C,EAAI,IAAM,GAAKxC,EAAMkB,UAAY,IAEjC,kBAAC,GAAD,CACEmE,QAASA,EACTI,aAAczF,EAAMyF,aACpBvE,UAAWlB,EAAMkB,UACjBwB,IAAK2C,EAAQiC,OAKf,kBAAC,GAAD,CACEjC,QAASA,EACTI,aAAczF,EAAMyF,aACpBvE,UAAWlB,EAAMkB,UACjBwB,IAAK2C,EAAQiC,WAOjBC,GAAoB,SAAAvH,GACxB,IAAMqF,EAAUrF,EAAMqF,QAChBmC,EACJ,WAAYnC,GAAWA,EAAO,OAAW1B,OAAS,EAC9C0B,EAAO,OAAW,GAAlB,IACA,SACAoC,EACJ,WAAYpC,GAAWA,EAAO,OAAW1B,OAAS,EAC9C0B,EAAO,OAAW,GAAlB,IACA,cACN,OACE,oCACE,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,WAAS,GACZ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIvH,UAAU,iCAC3BR,EAAMkB,WAAa,KAAOmE,EAAO,OAAW1B,QAAU,EACrD,yBACEnD,UAAWC,IAAO,YAAauH,KAAS1C,QAAvB,eACd0C,KAASC,UAAYjI,EAAMkB,WAAa,MAE3CiD,IAAKqD,EACLjD,IAAKkD,EACLnG,QAAS,WACPtB,EAAMyF,aAAaJ,IAErB6C,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOjE,IACP,sDAIN,kBAAC,EAAD,CACEjB,OAAQmC,EAAO,OACfnE,UAAWlB,EAAMkB,aAIvB,kBAAC2G,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACd,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYlD,EAAO,MACnB,kBAACmD,EAAA,EAAD,KAAWnD,EAAO,MAClB,kBAACoD,EAAA,EAAD,CACEjI,UAAWC,IACTuH,KAASU,WACTV,KAASW,YACT,mBACA,CAAE,UAAW3I,EAAMkB,WAAa,MAElCQ,KAAM2D,EAAO,QAPf,eAWmB,MAAlBA,EAAO,KACN,kBAACoD,EAAA,EAAD,CACEjI,UAAWC,IACTuH,KAASW,YACT,8BACA,CAAE,OAAQ3I,EAAMkB,UAAY,KAC5B,CAAE,eAAgBlB,EAAMkB,WAAa,MAEvCQ,KAAM2D,EAAO,KAPf,mBAoBVuD,GAAqB,SAAA5I,GACzB,IAAMqF,EAAUrF,EAAMqF,QAChBmC,EACJ,WAAYnC,GAAWA,EAAO,OAAW1B,OAAS,EAC9C0B,EAAO,OAAW,GAAlB,IACA,SACAoC,EACJ,WAAYpC,GAAWA,EAAO,OAAW1B,OAAS,EAC9C0B,EAAO,OAAW,GAAlB,IACA,cACN,OACE,oCACE,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,WAAS,GACZ,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACd,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAYlD,EAAO,MACnB,kBAACmD,EAAA,EAAD,KAAWnD,EAAO,MAClB,kBAACoD,EAAA,EAAD,CACEjI,UAAWC,IACTuH,KAASU,WACTV,KAASW,YACT,mBACA,CAAE,UAAW3I,EAAMkB,WAAa,MAElCQ,KAAM2D,EAAO,QAPf,eAWmB,MAAlBA,EAAO,KACN,kBAACoD,EAAA,EAAD,CACEjI,UAAWC,IACTuH,KAASW,YACT,8BACA,CAAE,OAAQ3I,EAAMkB,UAAY,KAC5B,CAAE,eAAgBlB,EAAMkB,WAAa,MAEvCQ,KAAM2D,EAAO,KAPf,eAcN,kBAACwC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACd,yBACEvH,UAAWC,IAAO,YAAauH,KAAS1C,QAAvB,eACd0C,KAASC,UAAYjI,EAAMkB,WAAa,MAE3CiD,IAAKqD,EACLjD,IAAKkD,EACLnG,QAAS,WACPtB,EAAMyF,aAAaJ,IAErB6C,QAAS,SAAAC,GACPA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOjE,IACP,2DAUH0B,M,sCCjRKgD,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2D,gBCRAC,G,YACJ,WAAYjJ,GAAQ,IAAD,8BACjB,4CAAMA,KACDe,QAAU,EAAKA,QAAQX,KAAb,gBACf,EAAKH,MAAQ,CACXgB,UAAW,MACX6E,MAAO9C,OAAO+C,YAEhB,EAAKmD,uBAAyB,EAAKA,uBAAuB9I,KAA5B,gBAPb,E,iFAWjBC,KAAK6I,yBACLlG,OAAOmG,iBACL,SACAC,KAAS/I,KAAK6I,yBAA0B,Q,6CAK1ClG,OAAOqG,oBACL,SACAD,KAAS/I,KAAK6I,yBAA0B,Q,+CAIlB,IAAD,OACvB,OAAOE,MAAS,WACd,EAAK9I,SAAS,CAAEwF,MAAO9C,OAAO+C,kB,8BAI1BuD,GACFjJ,KAAKJ,MAAMgB,YAAcqI,GAC3BjJ,KAAKC,SAAS,CACZW,UAAWqI,M,+BAMf,OACE,oCACE,kBAAC,EAAD,CACEvI,QAASV,KAAKU,QACdE,UAAWZ,KAAKJ,MAAMgB,UACtBC,UAAWb,KAAKJ,MAAM6F,QAExB,kBAACyD,GAAA,EAAD,CAAYtI,UAAWZ,KAAKJ,MAAMgB,UAAWT,UAAU,QACrD,kBAACgJ,GAAA,EAAD,CAASpD,MAAM,OACb,kBAAC,GAAD,CAAcA,MAAM,MAAMlF,UAAWb,KAAKJ,MAAM6F,SAElD,kBAAC0D,GAAA,EAAD,CAASpD,MAAM,WACb,kBAAC,GAAD,CAAcA,MAAM,UAAUlF,UAAWb,KAAKJ,MAAM6F,SAEtD,kBAAC0D,GAAA,EAAD,CAASpD,MAAM,aACb,kBAAC,GAAD,CAAcA,MAAM,YAAYlF,UAAWb,KAAKJ,MAAM6F,SAExD,kBAAC0D,GAAA,EAAD,CAASpD,MAAM,YACb,kBAAC,GAAD,CAAcA,MAAM,WAAWlF,UAAWb,KAAKJ,MAAM6F,e,GA3D/C3E,aAmElBsI,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDoD3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.78b74763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardImg\":\"PostList_cardImg__3GWq0\",\"clickable\":\"PostList_clickable__DH-vB\",\"githubLink\":\"PostList_githubLink__3b1jw\",\"blockButton\":\"PostList_blockButton__3vsKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__kP8TZ\",\"brand\":\"Navbar_brand__1TrHH\",\"navButton\":\"Navbar_navButton__3hzEf\",\"activeNavButton\":\"Navbar_activeNavButton__3BSn3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slide\":\"Carousel_slide__2ZZby\",\"mobileSlide\":\"Carousel_mobileSlide__2skeS\",\"full\":\"Carousel_full__3SxM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardImg\":\"CardImageModal_cardImg__lT1bY\"};","import React, { Component } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse\n} from \"reactstrap\";\nimport cnames from \"classnames\";\nimport navbar from \"./Navbar.module.css\";\n\nclass SimpleNavbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar\n          className={cnames(navbar.header, \"sticky-top\")}\n          light\n          expand=\"md\"\n        >\n          <NavContents\n            toggleFunc={this.toggle}\n            openTab={this.props.openTab}\n            isOpened={this.state.isOpen}\n            activeTab={this.props.activeTab}\n            viewWidth={this.props.viewWidth}\n          />\n        </Navbar>\n      </>\n    );\n  }\n}\n\nconst NavContents = props => {\n  return (\n    <>\n      <NavbarToggler onClick={props.toggleFunc} />\n      {props.viewWidth < 768 ? (\n        <MobileNav\n          isOpened={props.isOpened}\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n          collapseNav={props.toggleFunc}\n        />\n      ) : (\n        <FullNav\n          isOpened={props.isOpened}\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n        />\n      )}\n    </>\n  );\n};\n\nconst MobileNav = props => {\n  return (\n    <>\n      <NavbarBrand\n        className={cnames(\n          navbar.header,\n          \"border border-dark rounded thick-border\",\n          \"px-3 py-1\",\n          \"font-weight-bold\"\n        )}\n        href=\"/\"\n      >\n        Nick Caceres\n      </NavbarBrand>\n      <Collapse isOpen={props.isOpened} navbar>\n        <NavList\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n          collapseNav={props.collapseNav}\n        />\n      </Collapse>\n    </>\n  );\n};\n\nconst FullNav = props => {\n  return (\n    <>\n      <Collapse isOpen={props.isOpened} navbar>\n        <NavList\n          openTab={props.openTab}\n          activeTab={props.activeTab}\n          viewWidth={props.viewWidth}\n        />\n      </Collapse>\n      <NavbarBrand\n        className={cnames(\n          navbar.brand,\n          \"border border-dark rounded thick-full-border\",\n          \"px-3 py-1\",\n          \"font-weight-bold\"\n        )}\n        href=\"/\"\n      >\n        Nick Caceres\n      </NavbarBrand>\n    </>\n  );\n};\n\nconst NavList = props => {\n  return (\n    <Nav\n      pills\n      className={cnames({\n        \"flex-row\": props.viewWidth >= 768,\n        \"flex-column\": props.viewWidth < 768\n      })}\n    >\n      <NavButtons\n        activeTab={props.activeTab}\n        openTab={props.openTab}\n        collapseNav={props.collapseNav}\n        viewWidth={props.viewWidth}\n      />\n    </Nav>\n  );\n};\n\nconst NavButtons = props => {\n  const tabNames = {\n    iOS: \"iOS\",\n    android: \"Android\",\n    \"front-end\": \"Front-End Web\",\n    \"back-end\": \"Back-End Web\"\n  };\n\n  return [...Array(4)].map((_, i) => {\n    return (\n      <NavItem\n        className=\"mx-3 mx-md-1 mt-1 px-0\"\n        key={tabNames[Object.keys(tabNames)[i]]}\n      >\n        <NavLink\n          href=\"#\"\n          className={cnames(\n            \"d-flex justify-content-center no-wrap\",\n            \"mx-1\",\n            \"px-1\",\n            {\n              [navbar.navButton]: props.activeTab !== Object.keys(tabNames)[i],\n              [navbar.activeNavButton]:\n                props.activeTab === Object.keys(tabNames)[i],\n              active: props.activeTab === Object.keys(tabNames)[i]\n            }\n          )}\n          onClick={() => {\n            props.openTab(Object.keys(tabNames)[i]);\n            window.scrollTo(0, 0);\n            if (props.viewWidth < 768) {\n              props.collapseNav();\n            }\n          }}\n        >\n          {tabNames[Object.keys(tabNames)[i]]}\n        </NavLink>\n      </NavItem>\n    );\n  });\n};\n\nexport default SimpleNavbar;\n","import React, { Component } from \"react\";\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselCaption,\n  CarouselIndicators\n} from \"reactstrap\";\nimport carousel from \"./Carousel.module.css\";\nimport cnames from \"classnames\";\nconst util = require(\"util\");\n\n// Reactstrap carousel requires image array\n// 3 props two required\n// Src and alt text\n// Don't forget key with array list of items in react (so img src)\nlet images = [];\n\nclass SimpleCarousel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.goToIndex = this.goToIndex.bind(this);\n  }\n\n  // Required prop and gets the animated started\n  next() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === images.length - 1\n        ? 0\n        : this.state.activeIndex + 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  previous() {\n    if (this.animating) return;\n    const nextIndex =\n      this.state.activeIndex === 0\n        ? images.length - 1\n        : this.state.activeIndex - 1;\n    this.setState({ activeIndex: nextIndex });\n  }\n\n  goToIndex(newIndex) {\n    if (this.animating) return;\n    this.setState({ activeIndex: newIndex });\n  }\n\n  render() {\n    const { activeIndex } = this.state;\n    const projectImgs = this.props.images;\n    // console.log(\"Here are the carousel images\");\n    // console.log(util.inspect(projectImgs, false, null, true));\n    console.log(\"Current viewWidth: \" + this.props.viewWidth);\n    const slides = projectImgs.map(image => {\n      return (\n        <CarouselItem key={image.src}>\n          <img\n            className={cnames(\n              \"img-fluid\",\n              this.props.viewWidth >= 768\n                ? carousel.slide\n                : carousel.mobileSlide\n            )}\n            src={image.src}\n            alt={image.altText}\n          />\n          <CarouselCaption captionText=\"\" />\n        </CarouselItem>\n      );\n    });\n\n    return (\n      <Carousel\n        activeIndex={activeIndex}\n        next={this.next}\n        previous={this.previous}\n        pause={false}\n        ride=\"carousel\"\n        interval={false}\n        className={cnames(carousel.full)}\n      >\n        <CarouselIndicators\n          items={projectImgs}\n          activeIndex={activeIndex}\n          onClickHandler={this.goToIndex}\n        />\n        {slides}\n      </Carousel>\n    );\n  }\n}\n\nexport default SimpleCarousel;\n","import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport cnames from \"classnames\";\nimport SimpleCarousel from \"../SimpleCarousel/SimpleCarousel\";\nimport cardImg from \"./CardImageModal.module.css\";\nconst util = require(\"util\");\n\nconst CardImgModal = props => {\n  const project = props.project;\n  let projectName;\n  let projectImgs;\n  let carousel;\n  if (project) {\n    projectName = project[\"name\"];\n    projectImgs = project[\"images\"];\n    if (projectImgs.length > 1) {\n      carousel = (\n        <SimpleCarousel images={projectImgs} viewWidth={props.viewWidth} />\n      );\n    } else if (projectImgs.length === 1) {\n      carousel = (\n        <img\n          src={projectImgs[0][\"src\"]}\n          alt={projectImgs[0][\"alt\"]}\n          className={cnames(\"img-fluid\", cardImg.cardImg)}\n        />\n      );\n    } else {\n      carousel = null;\n    }\n  }\n  return (\n    <>\n      <Modal\n        isOpen={props.isModalOpen}\n        toggle={() => {\n          props.modalControl(null);\n        }}\n        className=\"modal-dialog-centered\"\n      >\n        <ModalHeader\n          toggle={() => {\n            props.modalControl(null);\n          }}\n        >\n          {projectName}\n        </ModalHeader>\n        <ModalBody>{carousel}</ModalBody>\n      </Modal>\n    </>\n  );\n};\n\nexport default CardImgModal;\n","// This is a component to create a series of posts\n// They will start on the left side and alternate (May refactor for right start as option)\nimport React, { Component } from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button\n} from \"reactstrap\";\nimport SimpleCarousel from \"../SimpleCarousel/SimpleCarousel\";\nimport CardImageModal from \"../CardImageModal/CardImageModal\";\nimport cnames from \"classnames\";\nimport postlist from \"./PostList.module.css\";\nimport iOSProjects from \"../TabPanelData/iOSProjects.json\"; // Imports are static so you have to list contents one by one\nimport androidProjects from \"../TabPanelData/Android.json\";\nimport frontEndProjects from \"../TabPanelData/Front-End-Web.json\";\nimport backEndProjects from \"../TabPanelData/Back-End-Web.json\";\nconst util = require(\"util\"); // Helps debug JS objects\n\n// FUTURE INSTALL FOR UNIQUE KEYS - Nano-ID\n\nclass PostListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: window.innerWidth,\n      modal: false,\n      modalProject: null\n    };\n\n    this.openModal = this.openModal.bind(this);\n  }\n\n  openModal(project) {\n    if (project === null) {\n      this.setState(prevState => ({\n        modal: !prevState.modal\n      }));\n    } else {\n      if (this.props.viewWidth < 768) {\n        // Prevent modal from appearing\n        return;\n      }\n      this.setState(prevState => ({\n        modal: !prevState.modal,\n        modalProject: project\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>{this.props.tabId}</h1>\n        <ProjectList\n          tabId={this.props.tabId}\n          viewWidth={this.props.viewWidth}\n          modalControl={this.openModal}\n        />\n        {this.props.viewWidth >= 768 && (\n          <CardImageModal\n            modalControl={this.openModal}\n            isModalOpen={this.state.modal}\n            project={this.state.modalProject}\n            viewWidth={this.props.viewWidth}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst ProjectList = props => {\n  let currentTab;\n  if (props.tabId === \"iOS\") {\n    currentTab = iOSProjects;\n  } else if (props.tabId === \"Android\") {\n    currentTab = androidProjects;\n  } else if (props.tabId === \"Front-End\") {\n    currentTab = frontEndProjects;\n  } else {\n    currentTab = backEndProjects;\n  }\n\n  // For future reference, can use nanoid, shortid, uuid from npm for keys on lists or id on forms\n  // Otherwise using other props is helpful as a key\n  let projectTypes = Object.keys(currentTab);\n  return projectTypes.map((projectType, i) => {\n    // Fancy way to convert json hyphenated names to pretty names\n    const projectTypeNoHyphen = projectType.replace(/-/g, \" \");\n    const properProjectType = projectTypeNoHyphen.replace(/\\b\\w/g, str =>\n      str.toUpperCase()\n    );\n    console.log(\"This is project type and a key: \" + projectType);\n    const projectSectionKey = props.tabId + \" \" + projectType;\n    const projects = currentTab[projectType];\n    return (\n      <div key={projectSectionKey}>\n        <h1>{properProjectType}</h1>\n        <ProjectSection\n          projects={projects}\n          viewWidth={props.viewWidth}\n          modalControl={props.modalControl}\n        />\n      </div>\n    );\n  });\n};\n\nconst ProjectSection = props => {\n  const projects = props.projects;\n  console.log(\n    \"These projects were passed: \" + util.inspect(projects, false, null, true)\n  );\n  const projectKeys = Object.keys(projects);\n  console.log(\"With these keys: \" + projectKeys);\n  return projects.map((project, i) => {\n    console.log(\"This is the project name: \" + project.name);\n    console.log(\"This is the project info: \" + project);\n    if (i % 2 === 0 || props.viewWidth < 768) {\n      return (\n        <LeftSidedCardPost\n          project={project}\n          modalControl={props.modalControl}\n          viewWidth={props.viewWidth}\n          key={project.name}\n        />\n      );\n    } else {\n      return (\n        <RightSidedCardPost\n          project={project}\n          modalControl={props.modalControl}\n          viewWidth={props.viewWidth}\n          key={project.name}\n        />\n      );\n    }\n  });\n};\n\nconst LeftSidedCardPost = props => {\n  const project = props.project;\n  const imageSrc =\n    \"images\" in project && project[\"images\"].length > 0\n      ? project[\"images\"][\"0\"][\"src\"]\n      : \"No img\";\n  const imageAlt =\n    \"images\" in project && project[\"images\"].length > 0\n      ? project[\"images\"][\"0\"][\"alt\"]\n      : \"Placeholder\";\n  return (\n    <>\n      <Card>\n        <Row noGutters>\n          <Col xs=\"12\" md=\"2\" className=\"d-flex justify-content-center\">\n            {props.viewWidth >= 768 || project[\"images\"].length <= 1 ? (\n              <img\n                className={cnames(\"img-fluid\", postlist.cardImg, {\n                  [postlist.clickable]: props.viewWidth >= 992\n                })}\n                src={imageSrc}\n                alt={imageAlt}\n                onClick={() => {\n                  props.modalControl(project);\n                }}\n                onError={e => {\n                  e.target.onerror = null;\n                  e.target.src =\n                    \"https://via.placeholder.com/350.png?text=Project\";\n                }}\n              />\n            ) : (\n              <SimpleCarousel\n                images={project[\"images\"]}\n                viewWidth={props.viewWidth}\n              />\n            )}\n          </Col>\n          <Col xs=\"12\" md=\"10\">\n            <CardBody>\n              <CardTitle>{project[\"name\"]}</CardTitle>\n              <CardText>{project[\"desc\"]}</CardText>\n              <Button\n                className={cnames(\n                  postlist.githubLink,\n                  postlist.blockButton,\n                  \"font-weight-bold\",\n                  { \"d-block\": props.viewWidth >= 992 }\n                )}\n                href={project[\"github\"]}\n              >\n                Github Page\n              </Button>\n              {project[\"url\"] != null && (\n                <Button\n                  className={cnames(\n                    postlist.blockButton,\n                    \"font-weight-bold btn-danger\",\n                    { \"ml-4\": props.viewWidth < 992 },\n                    { \"d-block mt-4\": props.viewWidth >= 992 }\n                  )}\n                  href={project[\"url\"]}\n                >\n                  Home Page\n                </Button>\n              )}\n            </CardBody>\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nconst RightSidedCardPost = props => {\n  const project = props.project;\n  const imageSrc =\n    \"images\" in project && project[\"images\"].length > 0\n      ? project[\"images\"][\"0\"][\"src\"]\n      : \"No img\";\n  const imageAlt =\n    \"images\" in project && project[\"images\"].length > 0\n      ? project[\"images\"][\"0\"][\"alt\"]\n      : \"Placeholder\";\n  return (\n    <>\n      <Card>\n        <Row noGutters>\n          <Col xs=\"12\" md=\"10\">\n            <CardBody>\n              <CardTitle>{project[\"name\"]}</CardTitle>\n              <CardText>{project[\"desc\"]}</CardText>\n              <Button\n                className={cnames(\n                  postlist.githubLink,\n                  postlist.blockButton,\n                  \"font-weight-bold\",\n                  { \"d-block\": props.viewWidth >= 992 }\n                )}\n                href={project[\"github\"]}\n              >\n                Github Page\n              </Button>\n              {project[\"url\"] != null && (\n                <Button\n                  className={cnames(\n                    postlist.blockButton,\n                    \"font-weight-bold btn-danger\",\n                    { \"ml-4\": props.viewWidth < 992 },\n                    { \"d-block mt-4\": props.viewWidth >= 992 }\n                  )}\n                  href={project[\"url\"]}\n                >\n                  Home Page\n                </Button>\n              )}\n            </CardBody>\n          </Col>\n          <Col xs=\"12\" md=\"2\">\n            <img\n              className={cnames(\"img-fluid\", postlist.cardImg, {\n                [postlist.clickable]: props.viewWidth >= 768\n              })}\n              src={imageSrc}\n              alt={imageAlt}\n              onClick={() => {\n                props.modalControl(project);\n              }}\n              onError={e => {\n                e.target.onerror = null;\n                e.target.src =\n                  \"https://via.placeholder.com/350.png?text=Project\";\n              }}\n            />\n          </Col>\n        </Row>\n      </Card>\n    </>\n  );\n};\n\nexport default PostListView;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SimpleNavBar from \"./SimpleNavbar/SimpleNavbar\";\nimport PostListView from \"./PostListView/PostListView.js\";\nimport { TabContent, TabPane } from \"reactstrap\";\nimport throttle from \"lodash.throttle\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.openTab = this.openTab.bind(this);\n    this.state = {\n      activeTab: \"iOS\",\n      width: window.innerWidth\n    };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener(\n      \"resize\",\n      throttle(this.updateWindowDimensions(), 500)\n    );\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"resize\",\n      throttle(this.updateWindowDimensions(), 500)\n    );\n  }\n\n  updateWindowDimensions() {\n    return throttle(() => {\n      this.setState({ width: window.innerWidth });\n    });\n  }\n\n  openTab(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <SimpleNavBar\n          openTab={this.openTab}\n          activeTab={this.state.activeTab}\n          viewWidth={this.state.width}\n        />\n        <TabContent activeTab={this.state.activeTab} className=\"mx-3\">\n          <TabPane tabId=\"iOS\">\n            <PostListView tabId=\"iOS\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"android\">\n            <PostListView tabId=\"Android\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"front-end\">\n            <PostListView tabId=\"Front-End\" viewWidth={this.state.width} />\n          </TabPane>\n          <TabPane tabId=\"back-end\">\n            <PostListView tabId=\"Back-End\" viewWidth={this.state.width} />\n          </TabPane>\n        </TabContent>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}